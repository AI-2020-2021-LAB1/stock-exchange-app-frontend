// Generated by https://quicktype.io

export interface Tests {
    content: Content[];
    pageable: Pageable;
    totalPages: number;
    totalElements: number;
    last: boolean;
    size: number;
    number: number;
    sort: Sort;
    first: boolean;
    numberOfElements: number;
    empty: boolean;
}

export interface Content {
    id: number;
    startDate: number;
    configuration: Configuration;
    userCount: number;
    stockCount: number;
    iterations: number;
    status: Status;
}

export interface Configuration {
    id: number;
    name: Name;
    createdAt: number;
    archived: boolean;
    loginAllStocks: number;
    loginOwnedStocks: number;
    loginUserOrders: number;
    loginMakeOrder: number;
    allStocksMakeOrder: number;
    allStocksEnd: number;
    ownedStocksMakeOrder: number;
    ownedStocksEnd: number;
    userOrdersMakeOrder: number;
    userOrdersEnd: number;
    userOrderDeleteOrder: number;
    makeOrderBuyOrder: number;
    makeOrderSellOrder: number;
    noOfOperations: number;
    noOfMoney: number;
}

export enum Name {
    Domyślna1 = 'Domyślna 1',
    Domyślna2 = 'Domyślna 2',
    Domyślna3 = 'Domyślna 3',
}

export enum Status {
    Error = 'ERROR',
    Finished = 'FINISHED',
}

export interface Pageable {
    sort: Sort;
    offset: number;
    pageNumber: number;
    pageSize: number;
    paged: boolean;
    unpaged: boolean;
}

export interface Sort {
    sorted: boolean;
    unsorted: boolean;
    empty: boolean;
}
